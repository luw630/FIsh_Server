// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_Bank.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Packet_Bank.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rpc {

namespace {

const ::google::protobuf::Descriptor* CS_BankSetPwd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_BankSetPwd_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_BankSetPwdRst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_BankSetPwdRst_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_BankChangePwd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_BankChangePwd_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_BankChangePwdRst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_BankChangePwdRst_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_BankStoreMoney_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_BankStoreMoney_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_BankStoreMoneyRst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_BankStoreMoneyRst_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_BankDrawMoney_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_BankDrawMoney_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_BankDrawMoneyRst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_BankDrawMoneyRst_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* emPacket_Bank_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Packet_5fBank_2eproto() {
  protobuf_AddDesc_Packet_5fBank_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Packet_Bank.proto");
  GOOGLE_CHECK(file != NULL);
  CS_BankSetPwd_descriptor_ = file->message_type(0);
  static const int CS_BankSetPwd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPwd, m_pwd_),
  };
  CS_BankSetPwd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_BankSetPwd_descriptor_,
      CS_BankSetPwd::default_instance_,
      CS_BankSetPwd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPwd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPwd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_BankSetPwd));
  SC_BankSetPwdRst_descriptor_ = file->message_type(1);
  static const int SC_BankSetPwdRst_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPwdRst, m_rst_),
  };
  SC_BankSetPwdRst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_BankSetPwdRst_descriptor_,
      SC_BankSetPwdRst::default_instance_,
      SC_BankSetPwdRst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPwdRst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPwdRst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_BankSetPwdRst));
  CS_BankChangePwd_descriptor_ = file->message_type(2);
  static const int CS_BankChangePwd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePwd, m_oldpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePwd, m_pwd_),
  };
  CS_BankChangePwd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_BankChangePwd_descriptor_,
      CS_BankChangePwd::default_instance_,
      CS_BankChangePwd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePwd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePwd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_BankChangePwd));
  SC_BankChangePwdRst_descriptor_ = file->message_type(3);
  static const int SC_BankChangePwdRst_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePwdRst, m_rst_),
  };
  SC_BankChangePwdRst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_BankChangePwdRst_descriptor_,
      SC_BankChangePwdRst::default_instance_,
      SC_BankChangePwdRst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePwdRst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePwdRst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_BankChangePwdRst));
  CS_BankStoreMoney_descriptor_ = file->message_type(4);
  static const int CS_BankStoreMoney_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStoreMoney, m_money_),
  };
  CS_BankStoreMoney_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_BankStoreMoney_descriptor_,
      CS_BankStoreMoney::default_instance_,
      CS_BankStoreMoney_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStoreMoney, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStoreMoney, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_BankStoreMoney));
  SC_BankStoreMoneyRst_descriptor_ = file->message_type(5);
  static const int SC_BankStoreMoneyRst_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStoreMoneyRst, m_rst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStoreMoneyRst, m_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStoreMoneyRst, m_bankmoney_),
  };
  SC_BankStoreMoneyRst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_BankStoreMoneyRst_descriptor_,
      SC_BankStoreMoneyRst::default_instance_,
      SC_BankStoreMoneyRst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStoreMoneyRst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStoreMoneyRst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_BankStoreMoneyRst));
  CS_BankDrawMoney_descriptor_ = file->message_type(6);
  static const int CS_BankDrawMoney_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDrawMoney, m_money_),
  };
  CS_BankDrawMoney_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_BankDrawMoney_descriptor_,
      CS_BankDrawMoney::default_instance_,
      CS_BankDrawMoney_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDrawMoney, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDrawMoney, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_BankDrawMoney));
  SC_BankDrawMoneyRst_descriptor_ = file->message_type(7);
  static const int SC_BankDrawMoneyRst_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDrawMoneyRst, m_rst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDrawMoneyRst, m_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDrawMoneyRst, m_bankmoney_),
  };
  SC_BankDrawMoneyRst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_BankDrawMoneyRst_descriptor_,
      SC_BankDrawMoneyRst::default_instance_,
      SC_BankDrawMoneyRst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDrawMoneyRst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDrawMoneyRst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_BankDrawMoneyRst));
  emPacket_Bank_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Packet_5fBank_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_BankSetPwd_descriptor_, &CS_BankSetPwd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_BankSetPwdRst_descriptor_, &SC_BankSetPwdRst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_BankChangePwd_descriptor_, &CS_BankChangePwd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_BankChangePwdRst_descriptor_, &SC_BankChangePwdRst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_BankStoreMoney_descriptor_, &CS_BankStoreMoney::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_BankStoreMoneyRst_descriptor_, &SC_BankStoreMoneyRst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_BankDrawMoney_descriptor_, &CS_BankDrawMoney::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_BankDrawMoneyRst_descriptor_, &SC_BankDrawMoneyRst::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Packet_5fBank_2eproto() {
  delete CS_BankSetPwd::default_instance_;
  delete CS_BankSetPwd_reflection_;
  delete SC_BankSetPwdRst::default_instance_;
  delete SC_BankSetPwdRst_reflection_;
  delete CS_BankChangePwd::default_instance_;
  delete CS_BankChangePwd_reflection_;
  delete SC_BankChangePwdRst::default_instance_;
  delete SC_BankChangePwdRst_reflection_;
  delete CS_BankStoreMoney::default_instance_;
  delete CS_BankStoreMoney_reflection_;
  delete SC_BankStoreMoneyRst::default_instance_;
  delete SC_BankStoreMoneyRst_reflection_;
  delete CS_BankDrawMoney::default_instance_;
  delete CS_BankDrawMoney_reflection_;
  delete SC_BankDrawMoneyRst::default_instance_;
  delete SC_BankDrawMoneyRst_reflection_;
}

void protobuf_AddDesc_Packet_5fBank_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::rpc::protobuf_AddDesc_Packet_5fBase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021Packet_Bank.proto\022\003rpc\032\021Packet_Base.pr"
    "oto\"\036\n\rCS_BankSetPwd\022\r\n\005m_pwd\030\001 \002(\t\"!\n\020S"
    "C_BankSetPwdRst\022\r\n\005m_rst\030\001 \002(\005\"3\n\020CS_Ban"
    "kChangePwd\022\020\n\010m_oldpwd\030\001 \002(\t\022\r\n\005m_pwd\030\002 "
    "\002(\t\"$\n\023SC_BankChangePwdRst\022\r\n\005m_rst\030\001 \002("
    "\005\"$\n\021CS_BankStoreMoney\022\017\n\007m_money\030\001 \002(\005\""
    "K\n\024SC_BankStoreMoneyRst\022\r\n\005m_rst\030\001 \002(\005\022\017"
    "\n\007m_money\030\002 \001(\005\022\023\n\013m_bankmoney\030\003 \001(\005\"#\n\020"
    "CS_BankDrawMoney\022\017\n\007m_money\030\001 \002(\005\"J\n\023SC_"
    "BankDrawMoneyRst\022\r\n\005m_rst\030\001 \002(\005\022\017\n\007m_mon"
    "ey\030\002 \001(\005\022\023\n\013m_bankmoney\030\003 \001(\005*\347\001\n\remPack"
    "et_Bank\022\025\n\020em_CS_BankSetPwd\020\300\004\022\030\n\023em_SC_"
    "BankSetPwdRst\020\301\004\022\030\n\023em_CS_BankChangePwd\020"
    "\302\004\022\033\n\026em_SC_BankChangePwdRst\020\303\004\022\031\n\024em_CS"
    "_BankStoreMoney\020\304\004\022\034\n\027em_SC_BankStoreMon"
    "eyRst\020\305\004\022\030\n\023em_CS_BankDrawMoney\020\306\004\022\033\n\026em"
    "_SC_BankDrawMoneyRst\020\307\004", 663);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Packet_Bank.proto", &protobuf_RegisterTypes);
  CS_BankSetPwd::default_instance_ = new CS_BankSetPwd();
  SC_BankSetPwdRst::default_instance_ = new SC_BankSetPwdRst();
  CS_BankChangePwd::default_instance_ = new CS_BankChangePwd();
  SC_BankChangePwdRst::default_instance_ = new SC_BankChangePwdRst();
  CS_BankStoreMoney::default_instance_ = new CS_BankStoreMoney();
  SC_BankStoreMoneyRst::default_instance_ = new SC_BankStoreMoneyRst();
  CS_BankDrawMoney::default_instance_ = new CS_BankDrawMoney();
  SC_BankDrawMoneyRst::default_instance_ = new SC_BankDrawMoneyRst();
  CS_BankSetPwd::default_instance_->InitAsDefaultInstance();
  SC_BankSetPwdRst::default_instance_->InitAsDefaultInstance();
  CS_BankChangePwd::default_instance_->InitAsDefaultInstance();
  SC_BankChangePwdRst::default_instance_->InitAsDefaultInstance();
  CS_BankStoreMoney::default_instance_->InitAsDefaultInstance();
  SC_BankStoreMoneyRst::default_instance_->InitAsDefaultInstance();
  CS_BankDrawMoney::default_instance_->InitAsDefaultInstance();
  SC_BankDrawMoneyRst::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Packet_5fBank_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Packet_5fBank_2eproto {
  StaticDescriptorInitializer_Packet_5fBank_2eproto() {
    protobuf_AddDesc_Packet_5fBank_2eproto();
  }
} static_descriptor_initializer_Packet_5fBank_2eproto_;
const ::google::protobuf::EnumDescriptor* emPacket_Bank_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return emPacket_Bank_descriptor_;
}
bool emPacket_Bank_IsValid(int value) {
  switch(value) {
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CS_BankSetPwd::kMPwdFieldNumber;
#endif  // !_MSC_VER

CS_BankSetPwd::CS_BankSetPwd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CS_BankSetPwd::InitAsDefaultInstance() {
}

CS_BankSetPwd::CS_BankSetPwd(const CS_BankSetPwd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CS_BankSetPwd::SharedCtor() {
  _cached_size_ = 0;
  m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_BankSetPwd::~CS_BankSetPwd() {
  SharedDtor();
}

void CS_BankSetPwd::SharedDtor() {
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_pwd_;
  }
  if (this != default_instance_) {
  }
}

void CS_BankSetPwd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankSetPwd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_BankSetPwd_descriptor_;
}

const CS_BankSetPwd& CS_BankSetPwd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

CS_BankSetPwd* CS_BankSetPwd::default_instance_ = NULL;

CS_BankSetPwd* CS_BankSetPwd::New() const {
  return new CS_BankSetPwd;
}

void CS_BankSetPwd::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_pwd()) {
      if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
        m_pwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_BankSetPwd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string m_pwd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_pwd().data(), this->m_pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CS_BankSetPwd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string m_pwd = 1;
  if (has_m_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_pwd().data(), this->m_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_pwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CS_BankSetPwd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string m_pwd = 1;
  if (has_m_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_pwd().data(), this->m_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_pwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CS_BankSetPwd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string m_pwd = 1;
    if (has_m_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_pwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankSetPwd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_BankSetPwd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_BankSetPwd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_BankSetPwd::MergeFrom(const CS_BankSetPwd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_pwd()) {
      set_m_pwd(from.m_pwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_BankSetPwd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankSetPwd::CopyFrom(const CS_BankSetPwd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankSetPwd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CS_BankSetPwd::Swap(CS_BankSetPwd* other) {
  if (other != this) {
    std::swap(m_pwd_, other->m_pwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_BankSetPwd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_BankSetPwd_descriptor_;
  metadata.reflection = CS_BankSetPwd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_BankSetPwdRst::kMRstFieldNumber;
#endif  // !_MSC_VER

SC_BankSetPwdRst::SC_BankSetPwdRst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SC_BankSetPwdRst::InitAsDefaultInstance() {
}

SC_BankSetPwdRst::SC_BankSetPwdRst(const SC_BankSetPwdRst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SC_BankSetPwdRst::SharedCtor() {
  _cached_size_ = 0;
  m_rst_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_BankSetPwdRst::~SC_BankSetPwdRst() {
  SharedDtor();
}

void SC_BankSetPwdRst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_BankSetPwdRst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankSetPwdRst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_BankSetPwdRst_descriptor_;
}

const SC_BankSetPwdRst& SC_BankSetPwdRst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

SC_BankSetPwdRst* SC_BankSetPwdRst::default_instance_ = NULL;

SC_BankSetPwdRst* SC_BankSetPwdRst::New() const {
  return new SC_BankSetPwdRst;
}

void SC_BankSetPwdRst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_rst_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_BankSetPwdRst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_rst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rst_)));
          set_has_m_rst();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SC_BankSetPwdRst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_rst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SC_BankSetPwdRst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_rst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SC_BankSetPwdRst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_rst = 1;
    if (has_m_rst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankSetPwdRst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_BankSetPwdRst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_BankSetPwdRst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_BankSetPwdRst::MergeFrom(const SC_BankSetPwdRst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_rst()) {
      set_m_rst(from.m_rst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_BankSetPwdRst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankSetPwdRst::CopyFrom(const SC_BankSetPwdRst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankSetPwdRst::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SC_BankSetPwdRst::Swap(SC_BankSetPwdRst* other) {
  if (other != this) {
    std::swap(m_rst_, other->m_rst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_BankSetPwdRst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_BankSetPwdRst_descriptor_;
  metadata.reflection = SC_BankSetPwdRst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_BankChangePwd::kMOldpwdFieldNumber;
const int CS_BankChangePwd::kMPwdFieldNumber;
#endif  // !_MSC_VER

CS_BankChangePwd::CS_BankChangePwd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CS_BankChangePwd::InitAsDefaultInstance() {
}

CS_BankChangePwd::CS_BankChangePwd(const CS_BankChangePwd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CS_BankChangePwd::SharedCtor() {
  _cached_size_ = 0;
  m_oldpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_BankChangePwd::~CS_BankChangePwd() {
  SharedDtor();
}

void CS_BankChangePwd::SharedDtor() {
  if (m_oldpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_oldpwd_;
  }
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_pwd_;
  }
  if (this != default_instance_) {
  }
}

void CS_BankChangePwd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankChangePwd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_BankChangePwd_descriptor_;
}

const CS_BankChangePwd& CS_BankChangePwd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

CS_BankChangePwd* CS_BankChangePwd::default_instance_ = NULL;

CS_BankChangePwd* CS_BankChangePwd::New() const {
  return new CS_BankChangePwd;
}

void CS_BankChangePwd::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_oldpwd()) {
      if (m_oldpwd_ != &::google::protobuf::internal::kEmptyString) {
        m_oldpwd_->clear();
      }
    }
    if (has_m_pwd()) {
      if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
        m_pwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_BankChangePwd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string m_oldpwd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_oldpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_oldpwd().data(), this->m_oldpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_pwd;
        break;
      }

      // required string m_pwd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_pwd().data(), this->m_pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CS_BankChangePwd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string m_oldpwd = 1;
  if (has_m_oldpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_oldpwd().data(), this->m_oldpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_oldpwd(), output);
  }

  // required string m_pwd = 2;
  if (has_m_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_pwd().data(), this->m_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_pwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CS_BankChangePwd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string m_oldpwd = 1;
  if (has_m_oldpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_oldpwd().data(), this->m_oldpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_oldpwd(), target);
  }

  // required string m_pwd = 2;
  if (has_m_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_pwd().data(), this->m_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_pwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CS_BankChangePwd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string m_oldpwd = 1;
    if (has_m_oldpwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_oldpwd());
    }

    // required string m_pwd = 2;
    if (has_m_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_pwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankChangePwd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_BankChangePwd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_BankChangePwd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_BankChangePwd::MergeFrom(const CS_BankChangePwd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_oldpwd()) {
      set_m_oldpwd(from.m_oldpwd());
    }
    if (from.has_m_pwd()) {
      set_m_pwd(from.m_pwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_BankChangePwd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankChangePwd::CopyFrom(const CS_BankChangePwd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankChangePwd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CS_BankChangePwd::Swap(CS_BankChangePwd* other) {
  if (other != this) {
    std::swap(m_oldpwd_, other->m_oldpwd_);
    std::swap(m_pwd_, other->m_pwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_BankChangePwd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_BankChangePwd_descriptor_;
  metadata.reflection = CS_BankChangePwd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_BankChangePwdRst::kMRstFieldNumber;
#endif  // !_MSC_VER

SC_BankChangePwdRst::SC_BankChangePwdRst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SC_BankChangePwdRst::InitAsDefaultInstance() {
}

SC_BankChangePwdRst::SC_BankChangePwdRst(const SC_BankChangePwdRst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SC_BankChangePwdRst::SharedCtor() {
  _cached_size_ = 0;
  m_rst_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_BankChangePwdRst::~SC_BankChangePwdRst() {
  SharedDtor();
}

void SC_BankChangePwdRst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_BankChangePwdRst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankChangePwdRst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_BankChangePwdRst_descriptor_;
}

const SC_BankChangePwdRst& SC_BankChangePwdRst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

SC_BankChangePwdRst* SC_BankChangePwdRst::default_instance_ = NULL;

SC_BankChangePwdRst* SC_BankChangePwdRst::New() const {
  return new SC_BankChangePwdRst;
}

void SC_BankChangePwdRst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_rst_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_BankChangePwdRst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_rst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rst_)));
          set_has_m_rst();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SC_BankChangePwdRst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_rst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SC_BankChangePwdRst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_rst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SC_BankChangePwdRst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_rst = 1;
    if (has_m_rst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankChangePwdRst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_BankChangePwdRst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_BankChangePwdRst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_BankChangePwdRst::MergeFrom(const SC_BankChangePwdRst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_rst()) {
      set_m_rst(from.m_rst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_BankChangePwdRst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankChangePwdRst::CopyFrom(const SC_BankChangePwdRst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankChangePwdRst::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SC_BankChangePwdRst::Swap(SC_BankChangePwdRst* other) {
  if (other != this) {
    std::swap(m_rst_, other->m_rst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_BankChangePwdRst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_BankChangePwdRst_descriptor_;
  metadata.reflection = SC_BankChangePwdRst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_BankStoreMoney::kMMoneyFieldNumber;
#endif  // !_MSC_VER

CS_BankStoreMoney::CS_BankStoreMoney()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CS_BankStoreMoney::InitAsDefaultInstance() {
}

CS_BankStoreMoney::CS_BankStoreMoney(const CS_BankStoreMoney& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CS_BankStoreMoney::SharedCtor() {
  _cached_size_ = 0;
  m_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_BankStoreMoney::~CS_BankStoreMoney() {
  SharedDtor();
}

void CS_BankStoreMoney::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CS_BankStoreMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankStoreMoney::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_BankStoreMoney_descriptor_;
}

const CS_BankStoreMoney& CS_BankStoreMoney::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

CS_BankStoreMoney* CS_BankStoreMoney::default_instance_ = NULL;

CS_BankStoreMoney* CS_BankStoreMoney::New() const {
  return new CS_BankStoreMoney;
}

void CS_BankStoreMoney::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_BankStoreMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_money_)));
          set_has_m_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CS_BankStoreMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_money = 1;
  if (has_m_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CS_BankStoreMoney::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_money = 1;
  if (has_m_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CS_BankStoreMoney::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_money = 1;
    if (has_m_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_money());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankStoreMoney::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_BankStoreMoney* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_BankStoreMoney*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_BankStoreMoney::MergeFrom(const CS_BankStoreMoney& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_money()) {
      set_m_money(from.m_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_BankStoreMoney::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankStoreMoney::CopyFrom(const CS_BankStoreMoney& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankStoreMoney::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CS_BankStoreMoney::Swap(CS_BankStoreMoney* other) {
  if (other != this) {
    std::swap(m_money_, other->m_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_BankStoreMoney::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_BankStoreMoney_descriptor_;
  metadata.reflection = CS_BankStoreMoney_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_BankStoreMoneyRst::kMRstFieldNumber;
const int SC_BankStoreMoneyRst::kMMoneyFieldNumber;
const int SC_BankStoreMoneyRst::kMBankmoneyFieldNumber;
#endif  // !_MSC_VER

SC_BankStoreMoneyRst::SC_BankStoreMoneyRst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SC_BankStoreMoneyRst::InitAsDefaultInstance() {
}

SC_BankStoreMoneyRst::SC_BankStoreMoneyRst(const SC_BankStoreMoneyRst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SC_BankStoreMoneyRst::SharedCtor() {
  _cached_size_ = 0;
  m_rst_ = 0;
  m_money_ = 0;
  m_bankmoney_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_BankStoreMoneyRst::~SC_BankStoreMoneyRst() {
  SharedDtor();
}

void SC_BankStoreMoneyRst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_BankStoreMoneyRst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankStoreMoneyRst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_BankStoreMoneyRst_descriptor_;
}

const SC_BankStoreMoneyRst& SC_BankStoreMoneyRst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

SC_BankStoreMoneyRst* SC_BankStoreMoneyRst::default_instance_ = NULL;

SC_BankStoreMoneyRst* SC_BankStoreMoneyRst::New() const {
  return new SC_BankStoreMoneyRst;
}

void SC_BankStoreMoneyRst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_rst_ = 0;
    m_money_ = 0;
    m_bankmoney_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_BankStoreMoneyRst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_rst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rst_)));
          set_has_m_rst();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_money;
        break;
      }

      // optional int32 m_money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_money_)));
          set_has_m_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_bankmoney;
        break;
      }

      // optional int32 m_bankmoney = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bankmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bankmoney_)));
          set_has_m_bankmoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SC_BankStoreMoneyRst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_rst(), output);
  }

  // optional int32 m_money = 2;
  if (has_m_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_money(), output);
  }

  // optional int32 m_bankmoney = 3;
  if (has_m_bankmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_bankmoney(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SC_BankStoreMoneyRst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_rst(), target);
  }

  // optional int32 m_money = 2;
  if (has_m_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_money(), target);
  }

  // optional int32 m_bankmoney = 3;
  if (has_m_bankmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_bankmoney(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SC_BankStoreMoneyRst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_rst = 1;
    if (has_m_rst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rst());
    }

    // optional int32 m_money = 2;
    if (has_m_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_money());
    }

    // optional int32 m_bankmoney = 3;
    if (has_m_bankmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bankmoney());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankStoreMoneyRst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_BankStoreMoneyRst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_BankStoreMoneyRst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_BankStoreMoneyRst::MergeFrom(const SC_BankStoreMoneyRst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_rst()) {
      set_m_rst(from.m_rst());
    }
    if (from.has_m_money()) {
      set_m_money(from.m_money());
    }
    if (from.has_m_bankmoney()) {
      set_m_bankmoney(from.m_bankmoney());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_BankStoreMoneyRst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankStoreMoneyRst::CopyFrom(const SC_BankStoreMoneyRst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankStoreMoneyRst::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SC_BankStoreMoneyRst::Swap(SC_BankStoreMoneyRst* other) {
  if (other != this) {
    std::swap(m_rst_, other->m_rst_);
    std::swap(m_money_, other->m_money_);
    std::swap(m_bankmoney_, other->m_bankmoney_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_BankStoreMoneyRst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_BankStoreMoneyRst_descriptor_;
  metadata.reflection = SC_BankStoreMoneyRst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_BankDrawMoney::kMMoneyFieldNumber;
#endif  // !_MSC_VER

CS_BankDrawMoney::CS_BankDrawMoney()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CS_BankDrawMoney::InitAsDefaultInstance() {
}

CS_BankDrawMoney::CS_BankDrawMoney(const CS_BankDrawMoney& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CS_BankDrawMoney::SharedCtor() {
  _cached_size_ = 0;
  m_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_BankDrawMoney::~CS_BankDrawMoney() {
  SharedDtor();
}

void CS_BankDrawMoney::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CS_BankDrawMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankDrawMoney::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_BankDrawMoney_descriptor_;
}

const CS_BankDrawMoney& CS_BankDrawMoney::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

CS_BankDrawMoney* CS_BankDrawMoney::default_instance_ = NULL;

CS_BankDrawMoney* CS_BankDrawMoney::New() const {
  return new CS_BankDrawMoney;
}

void CS_BankDrawMoney::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_BankDrawMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_money_)));
          set_has_m_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CS_BankDrawMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_money = 1;
  if (has_m_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CS_BankDrawMoney::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_money = 1;
  if (has_m_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CS_BankDrawMoney::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_money = 1;
    if (has_m_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_money());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankDrawMoney::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_BankDrawMoney* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_BankDrawMoney*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_BankDrawMoney::MergeFrom(const CS_BankDrawMoney& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_money()) {
      set_m_money(from.m_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_BankDrawMoney::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankDrawMoney::CopyFrom(const CS_BankDrawMoney& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankDrawMoney::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CS_BankDrawMoney::Swap(CS_BankDrawMoney* other) {
  if (other != this) {
    std::swap(m_money_, other->m_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_BankDrawMoney::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_BankDrawMoney_descriptor_;
  metadata.reflection = CS_BankDrawMoney_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_BankDrawMoneyRst::kMRstFieldNumber;
const int SC_BankDrawMoneyRst::kMMoneyFieldNumber;
const int SC_BankDrawMoneyRst::kMBankmoneyFieldNumber;
#endif  // !_MSC_VER

SC_BankDrawMoneyRst::SC_BankDrawMoneyRst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SC_BankDrawMoneyRst::InitAsDefaultInstance() {
}

SC_BankDrawMoneyRst::SC_BankDrawMoneyRst(const SC_BankDrawMoneyRst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SC_BankDrawMoneyRst::SharedCtor() {
  _cached_size_ = 0;
  m_rst_ = 0;
  m_money_ = 0;
  m_bankmoney_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_BankDrawMoneyRst::~SC_BankDrawMoneyRst() {
  SharedDtor();
}

void SC_BankDrawMoneyRst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SC_BankDrawMoneyRst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankDrawMoneyRst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_BankDrawMoneyRst_descriptor_;
}

const SC_BankDrawMoneyRst& SC_BankDrawMoneyRst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBank_2eproto();
  return *default_instance_;
}

SC_BankDrawMoneyRst* SC_BankDrawMoneyRst::default_instance_ = NULL;

SC_BankDrawMoneyRst* SC_BankDrawMoneyRst::New() const {
  return new SC_BankDrawMoneyRst;
}

void SC_BankDrawMoneyRst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_rst_ = 0;
    m_money_ = 0;
    m_bankmoney_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_BankDrawMoneyRst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_rst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rst_)));
          set_has_m_rst();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_money;
        break;
      }

      // optional int32 m_money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_money_)));
          set_has_m_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_bankmoney;
        break;
      }

      // optional int32 m_bankmoney = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bankmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bankmoney_)));
          set_has_m_bankmoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SC_BankDrawMoneyRst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_rst(), output);
  }

  // optional int32 m_money = 2;
  if (has_m_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_money(), output);
  }

  // optional int32 m_bankmoney = 3;
  if (has_m_bankmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_bankmoney(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SC_BankDrawMoneyRst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_rst = 1;
  if (has_m_rst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_rst(), target);
  }

  // optional int32 m_money = 2;
  if (has_m_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_money(), target);
  }

  // optional int32 m_bankmoney = 3;
  if (has_m_bankmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_bankmoney(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SC_BankDrawMoneyRst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_rst = 1;
    if (has_m_rst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rst());
    }

    // optional int32 m_money = 2;
    if (has_m_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_money());
    }

    // optional int32 m_bankmoney = 3;
    if (has_m_bankmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bankmoney());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankDrawMoneyRst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_BankDrawMoneyRst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_BankDrawMoneyRst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_BankDrawMoneyRst::MergeFrom(const SC_BankDrawMoneyRst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_rst()) {
      set_m_rst(from.m_rst());
    }
    if (from.has_m_money()) {
      set_m_money(from.m_money());
    }
    if (from.has_m_bankmoney()) {
      set_m_bankmoney(from.m_bankmoney());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_BankDrawMoneyRst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankDrawMoneyRst::CopyFrom(const SC_BankDrawMoneyRst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankDrawMoneyRst::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SC_BankDrawMoneyRst::Swap(SC_BankDrawMoneyRst* other) {
  if (other != this) {
    std::swap(m_rst_, other->m_rst_);
    std::swap(m_money_, other->m_money_);
    std::swap(m_bankmoney_, other->m_bankmoney_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_BankDrawMoneyRst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_BankDrawMoneyRst_descriptor_;
  metadata.reflection = SC_BankDrawMoneyRst_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

// @@protoc_insertion_point(global_scope)
