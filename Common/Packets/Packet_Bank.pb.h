// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_Bank.proto

#ifndef PROTOBUF_Packet_5fBank_2eproto__INCLUDED
#define PROTOBUF_Packet_5fBank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Packet_Base.pb.h"
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Packet_5fBank_2eproto();
void protobuf_AssignDesc_Packet_5fBank_2eproto();
void protobuf_ShutdownFile_Packet_5fBank_2eproto();

class CS_BankSetPwd;
class SC_BankSetPwdRst;
class CS_BankChangePwd;
class SC_BankChangePwdRst;
class CS_BankStoreMoney;
class SC_BankStoreMoneyRst;
class CS_BankDrawMoney;
class SC_BankDrawMoneyRst;

enum emPacket_Bank {
  em_CS_BankSetPwd = 576,
  em_SC_BankSetPwdRst = 577,
  em_CS_BankChangePwd = 578,
  em_SC_BankChangePwdRst = 579,
  em_CS_BankStoreMoney = 580,
  em_SC_BankStoreMoneyRst = 581,
  em_CS_BankDrawMoney = 582,
  em_SC_BankDrawMoneyRst = 583
};
bool emPacket_Bank_IsValid(int value);
const emPacket_Bank emPacket_Bank_MIN = em_CS_BankSetPwd;
const emPacket_Bank emPacket_Bank_MAX = em_SC_BankDrawMoneyRst;
const int emPacket_Bank_ARRAYSIZE = emPacket_Bank_MAX + 1;

const ::google::protobuf::EnumDescriptor* emPacket_Bank_descriptor();
inline const ::std::string& emPacket_Bank_Name(emPacket_Bank value) {
  return ::google::protobuf::internal::NameOfEnum(
    emPacket_Bank_descriptor(), value);
}
inline bool emPacket_Bank_Parse(
    const ::std::string& name, emPacket_Bank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emPacket_Bank>(
    emPacket_Bank_descriptor(), name, value);
}
// ===================================================================

class CS_BankSetPwd : public ::google::protobuf::Message {
 public:
  CS_BankSetPwd();
  virtual ~CS_BankSetPwd();

  CS_BankSetPwd(const CS_BankSetPwd& from);

  inline CS_BankSetPwd& operator=(const CS_BankSetPwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankSetPwd& default_instance();

  void Swap(CS_BankSetPwd* other);

  // implements Message ----------------------------------------------

  CS_BankSetPwd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_BankSetPwd& from);
  void MergeFrom(const CS_BankSetPwd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_pwd = 1;
  inline bool has_m_pwd() const;
  inline void clear_m_pwd();
  static const int kMPwdFieldNumber = 1;
  inline const ::std::string& m_pwd() const;
  inline void set_m_pwd(const ::std::string& value);
  inline void set_m_pwd(const char* value);
  inline void set_m_pwd(const char* value, size_t size);
  inline ::std::string* mutable_m_pwd();
  inline ::std::string* release_m_pwd();
  inline void set_allocated_m_pwd(::std::string* m_pwd);

  // @@protoc_insertion_point(class_scope:rpc.CS_BankSetPwd)
 private:
  inline void set_has_m_pwd();
  inline void clear_has_m_pwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static CS_BankSetPwd* default_instance_;
};
// -------------------------------------------------------------------

class SC_BankSetPwdRst : public ::google::protobuf::Message {
 public:
  SC_BankSetPwdRst();
  virtual ~SC_BankSetPwdRst();

  SC_BankSetPwdRst(const SC_BankSetPwdRst& from);

  inline SC_BankSetPwdRst& operator=(const SC_BankSetPwdRst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankSetPwdRst& default_instance();

  void Swap(SC_BankSetPwdRst* other);

  // implements Message ----------------------------------------------

  SC_BankSetPwdRst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_BankSetPwdRst& from);
  void MergeFrom(const SC_BankSetPwdRst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_rst = 1;
  inline bool has_m_rst() const;
  inline void clear_m_rst();
  static const int kMRstFieldNumber = 1;
  inline ::google::protobuf::int32 m_rst() const;
  inline void set_m_rst(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_BankSetPwdRst)
 private:
  inline void set_has_m_rst();
  inline void clear_has_m_rst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static SC_BankSetPwdRst* default_instance_;
};
// -------------------------------------------------------------------

class CS_BankChangePwd : public ::google::protobuf::Message {
 public:
  CS_BankChangePwd();
  virtual ~CS_BankChangePwd();

  CS_BankChangePwd(const CS_BankChangePwd& from);

  inline CS_BankChangePwd& operator=(const CS_BankChangePwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankChangePwd& default_instance();

  void Swap(CS_BankChangePwd* other);

  // implements Message ----------------------------------------------

  CS_BankChangePwd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_BankChangePwd& from);
  void MergeFrom(const CS_BankChangePwd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_oldpwd = 1;
  inline bool has_m_oldpwd() const;
  inline void clear_m_oldpwd();
  static const int kMOldpwdFieldNumber = 1;
  inline const ::std::string& m_oldpwd() const;
  inline void set_m_oldpwd(const ::std::string& value);
  inline void set_m_oldpwd(const char* value);
  inline void set_m_oldpwd(const char* value, size_t size);
  inline ::std::string* mutable_m_oldpwd();
  inline ::std::string* release_m_oldpwd();
  inline void set_allocated_m_oldpwd(::std::string* m_oldpwd);

  // required string m_pwd = 2;
  inline bool has_m_pwd() const;
  inline void clear_m_pwd();
  static const int kMPwdFieldNumber = 2;
  inline const ::std::string& m_pwd() const;
  inline void set_m_pwd(const ::std::string& value);
  inline void set_m_pwd(const char* value);
  inline void set_m_pwd(const char* value, size_t size);
  inline ::std::string* mutable_m_pwd();
  inline ::std::string* release_m_pwd();
  inline void set_allocated_m_pwd(::std::string* m_pwd);

  // @@protoc_insertion_point(class_scope:rpc.CS_BankChangePwd)
 private:
  inline void set_has_m_oldpwd();
  inline void clear_has_m_oldpwd();
  inline void set_has_m_pwd();
  inline void clear_has_m_pwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_oldpwd_;
  ::std::string* m_pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static CS_BankChangePwd* default_instance_;
};
// -------------------------------------------------------------------

class SC_BankChangePwdRst : public ::google::protobuf::Message {
 public:
  SC_BankChangePwdRst();
  virtual ~SC_BankChangePwdRst();

  SC_BankChangePwdRst(const SC_BankChangePwdRst& from);

  inline SC_BankChangePwdRst& operator=(const SC_BankChangePwdRst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankChangePwdRst& default_instance();

  void Swap(SC_BankChangePwdRst* other);

  // implements Message ----------------------------------------------

  SC_BankChangePwdRst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_BankChangePwdRst& from);
  void MergeFrom(const SC_BankChangePwdRst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_rst = 1;
  inline bool has_m_rst() const;
  inline void clear_m_rst();
  static const int kMRstFieldNumber = 1;
  inline ::google::protobuf::int32 m_rst() const;
  inline void set_m_rst(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_BankChangePwdRst)
 private:
  inline void set_has_m_rst();
  inline void clear_has_m_rst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static SC_BankChangePwdRst* default_instance_;
};
// -------------------------------------------------------------------

class CS_BankStoreMoney : public ::google::protobuf::Message {
 public:
  CS_BankStoreMoney();
  virtual ~CS_BankStoreMoney();

  CS_BankStoreMoney(const CS_BankStoreMoney& from);

  inline CS_BankStoreMoney& operator=(const CS_BankStoreMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankStoreMoney& default_instance();

  void Swap(CS_BankStoreMoney* other);

  // implements Message ----------------------------------------------

  CS_BankStoreMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_BankStoreMoney& from);
  void MergeFrom(const CS_BankStoreMoney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_money = 1;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.CS_BankStoreMoney)
 private:
  inline void set_has_m_money();
  inline void clear_has_m_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static CS_BankStoreMoney* default_instance_;
};
// -------------------------------------------------------------------

class SC_BankStoreMoneyRst : public ::google::protobuf::Message {
 public:
  SC_BankStoreMoneyRst();
  virtual ~SC_BankStoreMoneyRst();

  SC_BankStoreMoneyRst(const SC_BankStoreMoneyRst& from);

  inline SC_BankStoreMoneyRst& operator=(const SC_BankStoreMoneyRst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankStoreMoneyRst& default_instance();

  void Swap(SC_BankStoreMoneyRst* other);

  // implements Message ----------------------------------------------

  SC_BankStoreMoneyRst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_BankStoreMoneyRst& from);
  void MergeFrom(const SC_BankStoreMoneyRst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_rst = 1;
  inline bool has_m_rst() const;
  inline void clear_m_rst();
  static const int kMRstFieldNumber = 1;
  inline ::google::protobuf::int32 m_rst() const;
  inline void set_m_rst(::google::protobuf::int32 value);

  // optional int32 m_money = 2;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // optional int32 m_bankmoney = 3;
  inline bool has_m_bankmoney() const;
  inline void clear_m_bankmoney();
  static const int kMBankmoneyFieldNumber = 3;
  inline ::google::protobuf::int32 m_bankmoney() const;
  inline void set_m_bankmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_BankStoreMoneyRst)
 private:
  inline void set_has_m_rst();
  inline void clear_has_m_rst();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_bankmoney();
  inline void clear_has_m_bankmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rst_;
  ::google::protobuf::int32 m_money_;
  ::google::protobuf::int32 m_bankmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static SC_BankStoreMoneyRst* default_instance_;
};
// -------------------------------------------------------------------

class CS_BankDrawMoney : public ::google::protobuf::Message {
 public:
  CS_BankDrawMoney();
  virtual ~CS_BankDrawMoney();

  CS_BankDrawMoney(const CS_BankDrawMoney& from);

  inline CS_BankDrawMoney& operator=(const CS_BankDrawMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankDrawMoney& default_instance();

  void Swap(CS_BankDrawMoney* other);

  // implements Message ----------------------------------------------

  CS_BankDrawMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_BankDrawMoney& from);
  void MergeFrom(const CS_BankDrawMoney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_money = 1;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.CS_BankDrawMoney)
 private:
  inline void set_has_m_money();
  inline void clear_has_m_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static CS_BankDrawMoney* default_instance_;
};
// -------------------------------------------------------------------

class SC_BankDrawMoneyRst : public ::google::protobuf::Message {
 public:
  SC_BankDrawMoneyRst();
  virtual ~SC_BankDrawMoneyRst();

  SC_BankDrawMoneyRst(const SC_BankDrawMoneyRst& from);

  inline SC_BankDrawMoneyRst& operator=(const SC_BankDrawMoneyRst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankDrawMoneyRst& default_instance();

  void Swap(SC_BankDrawMoneyRst* other);

  // implements Message ----------------------------------------------

  SC_BankDrawMoneyRst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_BankDrawMoneyRst& from);
  void MergeFrom(const SC_BankDrawMoneyRst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_rst = 1;
  inline bool has_m_rst() const;
  inline void clear_m_rst();
  static const int kMRstFieldNumber = 1;
  inline ::google::protobuf::int32 m_rst() const;
  inline void set_m_rst(::google::protobuf::int32 value);

  // optional int32 m_money = 2;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // optional int32 m_bankmoney = 3;
  inline bool has_m_bankmoney() const;
  inline void clear_m_bankmoney();
  static const int kMBankmoneyFieldNumber = 3;
  inline ::google::protobuf::int32 m_bankmoney() const;
  inline void set_m_bankmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_BankDrawMoneyRst)
 private:
  inline void set_has_m_rst();
  inline void clear_has_m_rst();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_bankmoney();
  inline void clear_has_m_bankmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rst_;
  ::google::protobuf::int32 m_money_;
  ::google::protobuf::int32 m_bankmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBank_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBank_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBank_2eproto();

  void InitAsDefaultInstance();
  static SC_BankDrawMoneyRst* default_instance_;
};
// ===================================================================


// ===================================================================

// CS_BankSetPwd

// required string m_pwd = 1;
inline bool CS_BankSetPwd::has_m_pwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankSetPwd::set_has_m_pwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankSetPwd::clear_has_m_pwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankSetPwd::clear_m_pwd() {
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    m_pwd_->clear();
  }
  clear_has_m_pwd();
}
inline const ::std::string& CS_BankSetPwd::m_pwd() const {
  return *m_pwd_;
}
inline void CS_BankSetPwd::set_m_pwd(const ::std::string& value) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(value);
}
inline void CS_BankSetPwd::set_m_pwd(const char* value) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(value);
}
inline void CS_BankSetPwd::set_m_pwd(const char* value, size_t size) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CS_BankSetPwd::mutable_m_pwd() {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  return m_pwd_;
}
inline ::std::string* CS_BankSetPwd::release_m_pwd() {
  clear_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_pwd_;
    m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CS_BankSetPwd::set_allocated_m_pwd(::std::string* m_pwd) {
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_pwd_;
  }
  if (m_pwd) {
    set_has_m_pwd();
    m_pwd_ = m_pwd;
  } else {
    clear_has_m_pwd();
    m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SC_BankSetPwdRst

// required int32 m_rst = 1;
inline bool SC_BankSetPwdRst::has_m_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankSetPwdRst::set_has_m_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankSetPwdRst::clear_has_m_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankSetPwdRst::clear_m_rst() {
  m_rst_ = 0;
  clear_has_m_rst();
}
inline ::google::protobuf::int32 SC_BankSetPwdRst::m_rst() const {
  return m_rst_;
}
inline void SC_BankSetPwdRst::set_m_rst(::google::protobuf::int32 value) {
  set_has_m_rst();
  m_rst_ = value;
}

// -------------------------------------------------------------------

// CS_BankChangePwd

// required string m_oldpwd = 1;
inline bool CS_BankChangePwd::has_m_oldpwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankChangePwd::set_has_m_oldpwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankChangePwd::clear_has_m_oldpwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankChangePwd::clear_m_oldpwd() {
  if (m_oldpwd_ != &::google::protobuf::internal::kEmptyString) {
    m_oldpwd_->clear();
  }
  clear_has_m_oldpwd();
}
inline const ::std::string& CS_BankChangePwd::m_oldpwd() const {
  return *m_oldpwd_;
}
inline void CS_BankChangePwd::set_m_oldpwd(const ::std::string& value) {
  set_has_m_oldpwd();
  if (m_oldpwd_ == &::google::protobuf::internal::kEmptyString) {
    m_oldpwd_ = new ::std::string;
  }
  m_oldpwd_->assign(value);
}
inline void CS_BankChangePwd::set_m_oldpwd(const char* value) {
  set_has_m_oldpwd();
  if (m_oldpwd_ == &::google::protobuf::internal::kEmptyString) {
    m_oldpwd_ = new ::std::string;
  }
  m_oldpwd_->assign(value);
}
inline void CS_BankChangePwd::set_m_oldpwd(const char* value, size_t size) {
  set_has_m_oldpwd();
  if (m_oldpwd_ == &::google::protobuf::internal::kEmptyString) {
    m_oldpwd_ = new ::std::string;
  }
  m_oldpwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CS_BankChangePwd::mutable_m_oldpwd() {
  set_has_m_oldpwd();
  if (m_oldpwd_ == &::google::protobuf::internal::kEmptyString) {
    m_oldpwd_ = new ::std::string;
  }
  return m_oldpwd_;
}
inline ::std::string* CS_BankChangePwd::release_m_oldpwd() {
  clear_has_m_oldpwd();
  if (m_oldpwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_oldpwd_;
    m_oldpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CS_BankChangePwd::set_allocated_m_oldpwd(::std::string* m_oldpwd) {
  if (m_oldpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_oldpwd_;
  }
  if (m_oldpwd) {
    set_has_m_oldpwd();
    m_oldpwd_ = m_oldpwd;
  } else {
    clear_has_m_oldpwd();
    m_oldpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_pwd = 2;
inline bool CS_BankChangePwd::has_m_pwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BankChangePwd::set_has_m_pwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BankChangePwd::clear_has_m_pwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BankChangePwd::clear_m_pwd() {
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    m_pwd_->clear();
  }
  clear_has_m_pwd();
}
inline const ::std::string& CS_BankChangePwd::m_pwd() const {
  return *m_pwd_;
}
inline void CS_BankChangePwd::set_m_pwd(const ::std::string& value) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(value);
}
inline void CS_BankChangePwd::set_m_pwd(const char* value) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(value);
}
inline void CS_BankChangePwd::set_m_pwd(const char* value, size_t size) {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  m_pwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CS_BankChangePwd::mutable_m_pwd() {
  set_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    m_pwd_ = new ::std::string;
  }
  return m_pwd_;
}
inline ::std::string* CS_BankChangePwd::release_m_pwd() {
  clear_has_m_pwd();
  if (m_pwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_pwd_;
    m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CS_BankChangePwd::set_allocated_m_pwd(::std::string* m_pwd) {
  if (m_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_pwd_;
  }
  if (m_pwd) {
    set_has_m_pwd();
    m_pwd_ = m_pwd;
  } else {
    clear_has_m_pwd();
    m_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SC_BankChangePwdRst

// required int32 m_rst = 1;
inline bool SC_BankChangePwdRst::has_m_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankChangePwdRst::set_has_m_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankChangePwdRst::clear_has_m_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankChangePwdRst::clear_m_rst() {
  m_rst_ = 0;
  clear_has_m_rst();
}
inline ::google::protobuf::int32 SC_BankChangePwdRst::m_rst() const {
  return m_rst_;
}
inline void SC_BankChangePwdRst::set_m_rst(::google::protobuf::int32 value) {
  set_has_m_rst();
  m_rst_ = value;
}

// -------------------------------------------------------------------

// CS_BankStoreMoney

// required int32 m_money = 1;
inline bool CS_BankStoreMoney::has_m_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankStoreMoney::set_has_m_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankStoreMoney::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankStoreMoney::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 CS_BankStoreMoney::m_money() const {
  return m_money_;
}
inline void CS_BankStoreMoney::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// -------------------------------------------------------------------

// SC_BankStoreMoneyRst

// required int32 m_rst = 1;
inline bool SC_BankStoreMoneyRst::has_m_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankStoreMoneyRst::set_has_m_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankStoreMoneyRst::clear_has_m_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankStoreMoneyRst::clear_m_rst() {
  m_rst_ = 0;
  clear_has_m_rst();
}
inline ::google::protobuf::int32 SC_BankStoreMoneyRst::m_rst() const {
  return m_rst_;
}
inline void SC_BankStoreMoneyRst::set_m_rst(::google::protobuf::int32 value) {
  set_has_m_rst();
  m_rst_ = value;
}

// optional int32 m_money = 2;
inline bool SC_BankStoreMoneyRst::has_m_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BankStoreMoneyRst::set_has_m_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BankStoreMoneyRst::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BankStoreMoneyRst::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 SC_BankStoreMoneyRst::m_money() const {
  return m_money_;
}
inline void SC_BankStoreMoneyRst::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// optional int32 m_bankmoney = 3;
inline bool SC_BankStoreMoneyRst::has_m_bankmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_BankStoreMoneyRst::set_has_m_bankmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_BankStoreMoneyRst::clear_has_m_bankmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_BankStoreMoneyRst::clear_m_bankmoney() {
  m_bankmoney_ = 0;
  clear_has_m_bankmoney();
}
inline ::google::protobuf::int32 SC_BankStoreMoneyRst::m_bankmoney() const {
  return m_bankmoney_;
}
inline void SC_BankStoreMoneyRst::set_m_bankmoney(::google::protobuf::int32 value) {
  set_has_m_bankmoney();
  m_bankmoney_ = value;
}

// -------------------------------------------------------------------

// CS_BankDrawMoney

// required int32 m_money = 1;
inline bool CS_BankDrawMoney::has_m_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankDrawMoney::set_has_m_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankDrawMoney::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankDrawMoney::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 CS_BankDrawMoney::m_money() const {
  return m_money_;
}
inline void CS_BankDrawMoney::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// -------------------------------------------------------------------

// SC_BankDrawMoneyRst

// required int32 m_rst = 1;
inline bool SC_BankDrawMoneyRst::has_m_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankDrawMoneyRst::set_has_m_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankDrawMoneyRst::clear_has_m_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankDrawMoneyRst::clear_m_rst() {
  m_rst_ = 0;
  clear_has_m_rst();
}
inline ::google::protobuf::int32 SC_BankDrawMoneyRst::m_rst() const {
  return m_rst_;
}
inline void SC_BankDrawMoneyRst::set_m_rst(::google::protobuf::int32 value) {
  set_has_m_rst();
  m_rst_ = value;
}

// optional int32 m_money = 2;
inline bool SC_BankDrawMoneyRst::has_m_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BankDrawMoneyRst::set_has_m_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BankDrawMoneyRst::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BankDrawMoneyRst::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 SC_BankDrawMoneyRst::m_money() const {
  return m_money_;
}
inline void SC_BankDrawMoneyRst::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// optional int32 m_bankmoney = 3;
inline bool SC_BankDrawMoneyRst::has_m_bankmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_BankDrawMoneyRst::set_has_m_bankmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_BankDrawMoneyRst::clear_has_m_bankmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_BankDrawMoneyRst::clear_m_bankmoney() {
  m_bankmoney_ = 0;
  clear_has_m_bankmoney();
}
inline ::google::protobuf::int32 SC_BankDrawMoneyRst::m_bankmoney() const {
  return m_bankmoney_;
}
inline void SC_BankDrawMoneyRst::set_m_bankmoney(::google::protobuf::int32 value) {
  set_has_m_bankmoney();
  m_bankmoney_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::emPacket_Bank>() {
  return ::rpc::emPacket_Bank_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Packet_5fBank_2eproto__INCLUDED
