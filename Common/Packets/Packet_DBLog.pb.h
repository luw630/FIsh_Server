// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_DBLog.proto

#ifndef PROTOBUF_Packet_5fDBLog_2eproto__INCLUDED
#define PROTOBUF_Packet_5fDBLog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Packet_Base.pb.h"
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Packet_5fDBLog_2eproto();
void protobuf_AssignDesc_Packet_5fDBLog_2eproto();
void protobuf_ShutdownFile_Packet_5fDBLog_2eproto();

class Log_PlayerLogin;

enum emPacket_DbLog {
  em_Log_PlayerLogin = 112,
  em_Log_PlayerQuit = 113,
  em_Log_EnterFishGame = 114,
  em_Log_LeaveFishGame = 115,
  em_Log_EnterEnterTable = 116,
  em_Log_EnterLeaveTable = 117,
  em_Log_BattleSendBullet = 118,
  em_Log_BattleKillFish = 119
};
bool emPacket_DbLog_IsValid(int value);
const emPacket_DbLog emPacket_DbLog_MIN = em_Log_PlayerLogin;
const emPacket_DbLog emPacket_DbLog_MAX = em_Log_BattleKillFish;
const int emPacket_DbLog_ARRAYSIZE = emPacket_DbLog_MAX + 1;

const ::google::protobuf::EnumDescriptor* emPacket_DbLog_descriptor();
inline const ::std::string& emPacket_DbLog_Name(emPacket_DbLog value) {
  return ::google::protobuf::internal::NameOfEnum(
    emPacket_DbLog_descriptor(), value);
}
inline bool emPacket_DbLog_Parse(
    const ::std::string& name, emPacket_DbLog* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emPacket_DbLog>(
    emPacket_DbLog_descriptor(), name, value);
}
// ===================================================================

class Log_PlayerLogin : public ::google::protobuf::Message {
 public:
  Log_PlayerLogin();
  virtual ~Log_PlayerLogin();

  Log_PlayerLogin(const Log_PlayerLogin& from);

  inline Log_PlayerLogin& operator=(const Log_PlayerLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Log_PlayerLogin& default_instance();

  void Swap(Log_PlayerLogin* other);

  // implements Message ----------------------------------------------

  Log_PlayerLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Log_PlayerLogin& from);
  void MergeFrom(const Log_PlayerLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // required int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.Log_PlayerLogin)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fDBLog_2eproto();
  friend void protobuf_AssignDesc_Packet_5fDBLog_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fDBLog_2eproto();

  void InitAsDefaultInstance();
  static Log_PlayerLogin* default_instance_;
};
// ===================================================================


// ===================================================================

// Log_PlayerLogin

// required int32 playerid = 1;
inline bool Log_PlayerLogin::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Log_PlayerLogin::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Log_PlayerLogin::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Log_PlayerLogin::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 Log_PlayerLogin::playerid() const {
  return playerid_;
}
inline void Log_PlayerLogin::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required int32 time = 2;
inline bool Log_PlayerLogin::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Log_PlayerLogin::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Log_PlayerLogin::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Log_PlayerLogin::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Log_PlayerLogin::time() const {
  return time_;
}
inline void Log_PlayerLogin::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::emPacket_DbLog>() {
  return ::rpc::emPacket_DbLog_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Packet_5fDBLog_2eproto__INCLUDED
