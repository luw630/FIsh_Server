// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_Base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Packet_Base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rpc {

namespace {

const ::google::protobuf::Descriptor* t_EnterGamePlayerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  t_EnterGamePlayerData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* emPacket_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Packet_5fBase_2eproto() {
  protobuf_AddDesc_Packet_5fBase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Packet_Base.proto");
  GOOGLE_CHECK(file != NULL);
  t_EnterGamePlayerData_descriptor_ = file->message_type(0);
  static const int t_EnterGamePlayerData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, m_playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, m_headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, m_nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, m_money_),
  };
  t_EnterGamePlayerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      t_EnterGamePlayerData_descriptor_,
      t_EnterGamePlayerData::default_instance_,
      t_EnterGamePlayerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_EnterGamePlayerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(t_EnterGamePlayerData));
  emPacket_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Packet_5fBase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    t_EnterGamePlayerData_descriptor_, &t_EnterGamePlayerData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Packet_5fBase_2eproto() {
  delete t_EnterGamePlayerData::default_instance_;
  delete t_EnterGamePlayerData_reflection_;
}

void protobuf_AddDesc_Packet_5fBase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021Packet_Base.proto\022\003rpc\"b\n\025t_EnterGameP"
    "layerData\022\022\n\nm_playerid\030\001 \002(\r\022\020\n\010m_headi"
    "d\030\002 \002(\r\022\022\n\nm_nickname\030\003 \002(\t\022\017\n\007m_money\030\004"
    " \002(\003*\244\001\n\010emPacket\022\031\n\024emPacket_Login_Begi"
    "n\020\200\002\022\027\n\022emPacket_Login_End\020\377\003\022\031\n\024emPacke"
    "t_Lobby_Begin\020\200\004\022\027\n\022emPacket_Lobby_End\020\377"
    "\005\022\030\n\023emPacket_Fish_Begin\020\200\006\022\026\n\021emPacket_"
    "Fish_End\020\377\007", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Packet_Base.proto", &protobuf_RegisterTypes);
  t_EnterGamePlayerData::default_instance_ = new t_EnterGamePlayerData();
  t_EnterGamePlayerData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Packet_5fBase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Packet_5fBase_2eproto {
  StaticDescriptorInitializer_Packet_5fBase_2eproto() {
    protobuf_AddDesc_Packet_5fBase_2eproto();
  }
} static_descriptor_initializer_Packet_5fBase_2eproto_;
const ::google::protobuf::EnumDescriptor* emPacket_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return emPacket_descriptor_;
}
bool emPacket_IsValid(int value) {
  switch(value) {
    case 256:
    case 511:
    case 512:
    case 767:
    case 768:
    case 1023:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int t_EnterGamePlayerData::kMPlayeridFieldNumber;
const int t_EnterGamePlayerData::kMHeadidFieldNumber;
const int t_EnterGamePlayerData::kMNicknameFieldNumber;
const int t_EnterGamePlayerData::kMMoneyFieldNumber;
#endif  // !_MSC_VER

t_EnterGamePlayerData::t_EnterGamePlayerData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void t_EnterGamePlayerData::InitAsDefaultInstance() {
}

t_EnterGamePlayerData::t_EnterGamePlayerData(const t_EnterGamePlayerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void t_EnterGamePlayerData::SharedCtor() {
  _cached_size_ = 0;
  m_playerid_ = 0u;
  m_headid_ = 0u;
  m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_money_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

t_EnterGamePlayerData::~t_EnterGamePlayerData() {
  SharedDtor();
}

void t_EnterGamePlayerData::SharedDtor() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (this != default_instance_) {
  }
}

void t_EnterGamePlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* t_EnterGamePlayerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return t_EnterGamePlayerData_descriptor_;
}

const t_EnterGamePlayerData& t_EnterGamePlayerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packet_5fBase_2eproto();
  return *default_instance_;
}

t_EnterGamePlayerData* t_EnterGamePlayerData::default_instance_ = NULL;

t_EnterGamePlayerData* t_EnterGamePlayerData::New() const {
  return new t_EnterGamePlayerData;
}

void t_EnterGamePlayerData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_playerid_ = 0u;
    m_headid_ = 0u;
    if (has_m_nickname()) {
      if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
        m_nickname_->clear();
      }
    }
    m_money_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool t_EnterGamePlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 m_playerid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_playerid_)));
          set_has_m_playerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_headid;
        break;
      }

      // required uint32 m_headid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_headid_)));
          set_has_m_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_nickname;
        break;
      }

      // required string m_nickname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_nickname().data(), this->m_nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_money;
        break;
      }

      // required int64 m_money = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_money_)));
          set_has_m_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void t_EnterGamePlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 m_playerid = 1;
  if (has_m_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_playerid(), output);
  }

  // required uint32 m_headid = 2;
  if (has_m_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_headid(), output);
  }

  // required string m_nickname = 3;
  if (has_m_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_nickname().data(), this->m_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_nickname(), output);
  }

  // required int64 m_money = 4;
  if (has_m_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->m_money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* t_EnterGamePlayerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 m_playerid = 1;
  if (has_m_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_playerid(), target);
  }

  // required uint32 m_headid = 2;
  if (has_m_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_headid(), target);
  }

  // required string m_nickname = 3;
  if (has_m_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_nickname().data(), this->m_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_nickname(), target);
  }

  // required int64 m_money = 4;
  if (has_m_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->m_money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int t_EnterGamePlayerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 m_playerid = 1;
    if (has_m_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_playerid());
    }

    // required uint32 m_headid = 2;
    if (has_m_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_headid());
    }

    // required string m_nickname = 3;
    if (has_m_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_nickname());
    }

    // required int64 m_money = 4;
    if (has_m_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_money());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void t_EnterGamePlayerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const t_EnterGamePlayerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const t_EnterGamePlayerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void t_EnterGamePlayerData::MergeFrom(const t_EnterGamePlayerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_playerid()) {
      set_m_playerid(from.m_playerid());
    }
    if (from.has_m_headid()) {
      set_m_headid(from.m_headid());
    }
    if (from.has_m_nickname()) {
      set_m_nickname(from.m_nickname());
    }
    if (from.has_m_money()) {
      set_m_money(from.m_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void t_EnterGamePlayerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void t_EnterGamePlayerData::CopyFrom(const t_EnterGamePlayerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool t_EnterGamePlayerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void t_EnterGamePlayerData::Swap(t_EnterGamePlayerData* other) {
  if (other != this) {
    std::swap(m_playerid_, other->m_playerid_);
    std::swap(m_headid_, other->m_headid_);
    std::swap(m_nickname_, other->m_nickname_);
    std::swap(m_money_, other->m_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata t_EnterGamePlayerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = t_EnterGamePlayerData_descriptor_;
  metadata.reflection = t_EnterGamePlayerData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

// @@protoc_insertion_point(global_scope)
