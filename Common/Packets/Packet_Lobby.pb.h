// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_Lobby.proto

#ifndef PROTOBUF_Packet_5fLobby_2eproto__INCLUDED
#define PROTOBUF_Packet_5fLobby_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Packet_Base.pb.h"
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Packet_5fLobby_2eproto();
void protobuf_AssignDesc_Packet_5fLobby_2eproto();
void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

class t_RankItem;
class t_AnnouncementItem;
class t_MailItem;
class SC_PlayerInfo;
class CS_EnterGame;
class SC_EnterGameRst;
class CS_Rank;
class SC_RankData;
class SC_Announcement;
class SC_MailList;
class CS_MailDelItem;

enum emPacket_Lobby {
  em_Lobby_Begin = 512,
  em_CS_PlayerInfo = 528,
  em_SC_PlayerInfo = 529,
  em_CS_EnterGame = 530,
  em_SC_EnterGameRst = 531,
  em_CS_LeaveGame = 532,
  em_SC_LeaveGameRst = 533,
  em_CS_Rank = 534,
  em_SC_RankData = 535,
  em_CS_Announcement = 536,
  em_SC_Announcement = 537,
  em_CS_MailGetList = 608,
  em_SC_MailList = 609,
  em_CS_MailDelItem = 610,
  em_Lobby_End = 767
};
bool emPacket_Lobby_IsValid(int value);
const emPacket_Lobby emPacket_Lobby_MIN = em_Lobby_Begin;
const emPacket_Lobby emPacket_Lobby_MAX = em_Lobby_End;
const int emPacket_Lobby_ARRAYSIZE = emPacket_Lobby_MAX + 1;

const ::google::protobuf::EnumDescriptor* emPacket_Lobby_descriptor();
inline const ::std::string& emPacket_Lobby_Name(emPacket_Lobby value) {
  return ::google::protobuf::internal::NameOfEnum(
    emPacket_Lobby_descriptor(), value);
}
inline bool emPacket_Lobby_Parse(
    const ::std::string& name, emPacket_Lobby* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emPacket_Lobby>(
    emPacket_Lobby_descriptor(), name, value);
}
// ===================================================================

class t_RankItem : public ::google::protobuf::Message {
 public:
  t_RankItem();
  virtual ~t_RankItem();

  t_RankItem(const t_RankItem& from);

  inline t_RankItem& operator=(const t_RankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_RankItem& default_instance();

  void Swap(t_RankItem* other);

  // implements Message ----------------------------------------------

  t_RankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_RankItem& from);
  void MergeFrom(const t_RankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_index = 1;
  inline bool has_m_index() const;
  inline void clear_m_index();
  static const int kMIndexFieldNumber = 1;
  inline ::google::protobuf::int32 m_index() const;
  inline void set_m_index(::google::protobuf::int32 value);

  // required int32 m_playerid = 2;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 2;
  inline ::google::protobuf::int32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::int32 value);

  // required string m_name = 3;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 3;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // required uint64 m_money = 4;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 4;
  inline ::google::protobuf::uint64 m_money() const;
  inline void set_m_money(::google::protobuf::uint64 value);

  // required int32 m_headid = 5;
  inline bool has_m_headid() const;
  inline void clear_m_headid();
  static const int kMHeadidFieldNumber = 5;
  inline ::google::protobuf::int32 m_headid() const;
  inline void set_m_headid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.t_RankItem)
 private:
  inline void set_has_m_index();
  inline void clear_has_m_index();
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_headid();
  inline void clear_has_m_headid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_index_;
  ::google::protobuf::int32 m_playerid_;
  ::std::string* m_name_;
  ::google::protobuf::uint64 m_money_;
  ::google::protobuf::int32 m_headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static t_RankItem* default_instance_;
};
// -------------------------------------------------------------------

class t_AnnouncementItem : public ::google::protobuf::Message {
 public:
  t_AnnouncementItem();
  virtual ~t_AnnouncementItem();

  t_AnnouncementItem(const t_AnnouncementItem& from);

  inline t_AnnouncementItem& operator=(const t_AnnouncementItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_AnnouncementItem& default_instance();

  void Swap(t_AnnouncementItem* other);

  // implements Message ----------------------------------------------

  t_AnnouncementItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_AnnouncementItem& from);
  void MergeFrom(const t_AnnouncementItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // required string m_title = 2;
  inline bool has_m_title() const;
  inline void clear_m_title();
  static const int kMTitleFieldNumber = 2;
  inline const ::std::string& m_title() const;
  inline void set_m_title(const ::std::string& value);
  inline void set_m_title(const char* value);
  inline void set_m_title(const char* value, size_t size);
  inline ::std::string* mutable_m_title();
  inline ::std::string* release_m_title();
  inline void set_allocated_m_title(::std::string* m_title);

  // required string m_content = 3;
  inline bool has_m_content() const;
  inline void clear_m_content();
  static const int kMContentFieldNumber = 3;
  inline const ::std::string& m_content() const;
  inline void set_m_content(const ::std::string& value);
  inline void set_m_content(const char* value);
  inline void set_m_content(const char* value, size_t size);
  inline ::std::string* mutable_m_content();
  inline ::std::string* release_m_content();
  inline void set_allocated_m_content(::std::string* m_content);

  // @@protoc_insertion_point(class_scope:rpc.t_AnnouncementItem)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_title();
  inline void clear_has_m_title();
  inline void set_has_m_content();
  inline void clear_has_m_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_title_;
  ::std::string* m_content_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static t_AnnouncementItem* default_instance_;
};
// -------------------------------------------------------------------

class t_MailItem : public ::google::protobuf::Message {
 public:
  t_MailItem();
  virtual ~t_MailItem();

  t_MailItem(const t_MailItem& from);

  inline t_MailItem& operator=(const t_MailItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_MailItem& default_instance();

  void Swap(t_MailItem* other);

  // implements Message ----------------------------------------------

  t_MailItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_MailItem& from);
  void MergeFrom(const t_MailItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // required string m_title = 2;
  inline bool has_m_title() const;
  inline void clear_m_title();
  static const int kMTitleFieldNumber = 2;
  inline const ::std::string& m_title() const;
  inline void set_m_title(const ::std::string& value);
  inline void set_m_title(const char* value);
  inline void set_m_title(const char* value, size_t size);
  inline ::std::string* mutable_m_title();
  inline ::std::string* release_m_title();
  inline void set_allocated_m_title(::std::string* m_title);

  // required int32 m_time = 3;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // required string m_content = 4;
  inline bool has_m_content() const;
  inline void clear_m_content();
  static const int kMContentFieldNumber = 4;
  inline const ::std::string& m_content() const;
  inline void set_m_content(const ::std::string& value);
  inline void set_m_content(const char* value);
  inline void set_m_content(const char* value, size_t size);
  inline ::std::string* mutable_m_content();
  inline ::std::string* release_m_content();
  inline void set_allocated_m_content(::std::string* m_content);

  // @@protoc_insertion_point(class_scope:rpc.t_MailItem)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_title();
  inline void clear_has_m_title();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_content();
  inline void clear_has_m_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_title_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_time_;
  ::std::string* m_content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static t_MailItem* default_instance_;
};
// -------------------------------------------------------------------

class SC_PlayerInfo : public ::google::protobuf::Message {
 public:
  SC_PlayerInfo();
  virtual ~SC_PlayerInfo();

  SC_PlayerInfo(const SC_PlayerInfo& from);

  inline SC_PlayerInfo& operator=(const SC_PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PlayerInfo& default_instance();

  void Swap(SC_PlayerInfo* other);

  // implements Message ----------------------------------------------

  SC_PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_PlayerInfo& from);
  void MergeFrom(const SC_PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_playerid = 1;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 1;
  inline ::google::protobuf::int32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::int32 value);

  // required string m_nickname = 2;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNicknameFieldNumber = 2;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // required int32 m_sex = 3;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 3;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // required int32 m_headid = 4;
  inline bool has_m_headid() const;
  inline void clear_m_headid();
  static const int kMHeadidFieldNumber = 4;
  inline ::google::protobuf::int32 m_headid() const;
  inline void set_m_headid(::google::protobuf::int32 value);

  // required int64 m_money = 5;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 5;
  inline ::google::protobuf::int64 m_money() const;
  inline void set_m_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_PlayerInfo)
 private:
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_headid();
  inline void clear_has_m_headid();
  inline void set_has_m_money();
  inline void clear_has_m_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_nickname_;
  ::google::protobuf::int32 m_playerid_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int64 m_money_;
  ::google::protobuf::int32 m_headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static SC_PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CS_EnterGame : public ::google::protobuf::Message {
 public:
  CS_EnterGame();
  virtual ~CS_EnterGame();

  CS_EnterGame(const CS_EnterGame& from);

  inline CS_EnterGame& operator=(const CS_EnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_EnterGame& default_instance();

  void Swap(CS_EnterGame* other);

  // implements Message ----------------------------------------------

  CS_EnterGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_EnterGame& from);
  void MergeFrom(const CS_EnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_gameid = 1;
  inline bool has_m_gameid() const;
  inline void clear_m_gameid();
  static const int kMGameidFieldNumber = 1;
  inline ::google::protobuf::int32 m_gameid() const;
  inline void set_m_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.CS_EnterGame)
 private:
  inline void set_has_m_gameid();
  inline void clear_has_m_gameid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_gameid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static CS_EnterGame* default_instance_;
};
// -------------------------------------------------------------------

class SC_EnterGameRst : public ::google::protobuf::Message {
 public:
  SC_EnterGameRst();
  virtual ~SC_EnterGameRst();

  SC_EnterGameRst(const SC_EnterGameRst& from);

  inline SC_EnterGameRst& operator=(const SC_EnterGameRst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_EnterGameRst& default_instance();

  void Swap(SC_EnterGameRst* other);

  // implements Message ----------------------------------------------

  SC_EnterGameRst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_EnterGameRst& from);
  void MergeFrom(const SC_EnterGameRst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_rst = 1;
  inline bool has_m_rst() const;
  inline void clear_m_rst();
  static const int kMRstFieldNumber = 1;
  inline ::google::protobuf::int32 m_rst() const;
  inline void set_m_rst(::google::protobuf::int32 value);

  // required int32 m_gameid = 2;
  inline bool has_m_gameid() const;
  inline void clear_m_gameid();
  static const int kMGameidFieldNumber = 2;
  inline ::google::protobuf::int32 m_gameid() const;
  inline void set_m_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.SC_EnterGameRst)
 private:
  inline void set_has_m_rst();
  inline void clear_has_m_rst();
  inline void set_has_m_gameid();
  inline void clear_has_m_gameid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rst_;
  ::google::protobuf::int32 m_gameid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static SC_EnterGameRst* default_instance_;
};
// -------------------------------------------------------------------

class CS_Rank : public ::google::protobuf::Message {
 public:
  CS_Rank();
  virtual ~CS_Rank();

  CS_Rank(const CS_Rank& from);

  inline CS_Rank& operator=(const CS_Rank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Rank& default_instance();

  void Swap(CS_Rank* other);

  // implements Message ----------------------------------------------

  CS_Rank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_Rank& from);
  void MergeFrom(const CS_Rank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_page = 1;
  inline bool has_m_page() const;
  inline void clear_m_page();
  static const int kMPageFieldNumber = 1;
  inline ::google::protobuf::int32 m_page() const;
  inline void set_m_page(::google::protobuf::int32 value);

  // required int32 m_perPageNum = 2;
  inline bool has_m_perpagenum() const;
  inline void clear_m_perpagenum();
  static const int kMPerPageNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_perpagenum() const;
  inline void set_m_perpagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.CS_Rank)
 private:
  inline void set_has_m_page();
  inline void clear_has_m_page();
  inline void set_has_m_perpagenum();
  inline void clear_has_m_perpagenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_page_;
  ::google::protobuf::int32 m_perpagenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static CS_Rank* default_instance_;
};
// -------------------------------------------------------------------

class SC_RankData : public ::google::protobuf::Message {
 public:
  SC_RankData();
  virtual ~SC_RankData();

  SC_RankData(const SC_RankData& from);

  inline SC_RankData& operator=(const SC_RankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RankData& default_instance();

  void Swap(SC_RankData* other);

  // implements Message ----------------------------------------------

  SC_RankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_RankData& from);
  void MergeFrom(const SC_RankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rpc.t_RankItem m_data = 1;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 1;
  inline const ::rpc::t_RankItem& m_data(int index) const;
  inline ::rpc::t_RankItem* mutable_m_data(int index);
  inline ::rpc::t_RankItem* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_RankItem >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::t_RankItem >*
      mutable_m_data();

  // @@protoc_insertion_point(class_scope:rpc.SC_RankData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rpc::t_RankItem > m_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static SC_RankData* default_instance_;
};
// -------------------------------------------------------------------

class SC_Announcement : public ::google::protobuf::Message {
 public:
  SC_Announcement();
  virtual ~SC_Announcement();

  SC_Announcement(const SC_Announcement& from);

  inline SC_Announcement& operator=(const SC_Announcement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Announcement& default_instance();

  void Swap(SC_Announcement* other);

  // implements Message ----------------------------------------------

  SC_Announcement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_Announcement& from);
  void MergeFrom(const SC_Announcement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rpc.t_AnnouncementItem m_data = 1;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 1;
  inline const ::rpc::t_AnnouncementItem& m_data(int index) const;
  inline ::rpc::t_AnnouncementItem* mutable_m_data(int index);
  inline ::rpc::t_AnnouncementItem* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_AnnouncementItem >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::t_AnnouncementItem >*
      mutable_m_data();

  // @@protoc_insertion_point(class_scope:rpc.SC_Announcement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rpc::t_AnnouncementItem > m_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static SC_Announcement* default_instance_;
};
// -------------------------------------------------------------------

class SC_MailList : public ::google::protobuf::Message {
 public:
  SC_MailList();
  virtual ~SC_MailList();

  SC_MailList(const SC_MailList& from);

  inline SC_MailList& operator=(const SC_MailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_MailList& default_instance();

  void Swap(SC_MailList* other);

  // implements Message ----------------------------------------------

  SC_MailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_MailList& from);
  void MergeFrom(const SC_MailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rpc.t_MailItem m_data = 1;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 1;
  inline const ::rpc::t_MailItem& m_data(int index) const;
  inline ::rpc::t_MailItem* mutable_m_data(int index);
  inline ::rpc::t_MailItem* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_MailItem >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::t_MailItem >*
      mutable_m_data();

  // @@protoc_insertion_point(class_scope:rpc.SC_MailList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rpc::t_MailItem > m_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static SC_MailList* default_instance_;
};
// -------------------------------------------------------------------

class CS_MailDelItem : public ::google::protobuf::Message {
 public:
  CS_MailDelItem();
  virtual ~CS_MailDelItem();

  CS_MailDelItem(const CS_MailDelItem& from);

  inline CS_MailDelItem& operator=(const CS_MailDelItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_MailDelItem& default_instance();

  void Swap(CS_MailDelItem* other);

  // implements Message ----------------------------------------------

  CS_MailDelItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_MailDelItem& from);
  void MergeFrom(const CS_MailDelItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpc.CS_MailDelItem)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fLobby_2eproto();
  friend void protobuf_AssignDesc_Packet_5fLobby_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fLobby_2eproto();

  void InitAsDefaultInstance();
  static CS_MailDelItem* default_instance_;
};
// ===================================================================


// ===================================================================

// t_RankItem

// required int32 m_index = 1;
inline bool t_RankItem::has_m_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_RankItem::set_has_m_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_RankItem::clear_has_m_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_RankItem::clear_m_index() {
  m_index_ = 0;
  clear_has_m_index();
}
inline ::google::protobuf::int32 t_RankItem::m_index() const {
  return m_index_;
}
inline void t_RankItem::set_m_index(::google::protobuf::int32 value) {
  set_has_m_index();
  m_index_ = value;
}

// required int32 m_playerid = 2;
inline bool t_RankItem::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_RankItem::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_RankItem::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_RankItem::clear_m_playerid() {
  m_playerid_ = 0;
  clear_has_m_playerid();
}
inline ::google::protobuf::int32 t_RankItem::m_playerid() const {
  return m_playerid_;
}
inline void t_RankItem::set_m_playerid(::google::protobuf::int32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// required string m_name = 3;
inline bool t_RankItem::has_m_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_RankItem::set_has_m_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_RankItem::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_RankItem::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& t_RankItem::m_name() const {
  return *m_name_;
}
inline void t_RankItem::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void t_RankItem::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void t_RankItem::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_RankItem::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* t_RankItem::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_RankItem::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 m_money = 4;
inline bool t_RankItem::has_m_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t_RankItem::set_has_m_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t_RankItem::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t_RankItem::clear_m_money() {
  m_money_ = GOOGLE_ULONGLONG(0);
  clear_has_m_money();
}
inline ::google::protobuf::uint64 t_RankItem::m_money() const {
  return m_money_;
}
inline void t_RankItem::set_m_money(::google::protobuf::uint64 value) {
  set_has_m_money();
  m_money_ = value;
}

// required int32 m_headid = 5;
inline bool t_RankItem::has_m_headid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t_RankItem::set_has_m_headid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t_RankItem::clear_has_m_headid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t_RankItem::clear_m_headid() {
  m_headid_ = 0;
  clear_has_m_headid();
}
inline ::google::protobuf::int32 t_RankItem::m_headid() const {
  return m_headid_;
}
inline void t_RankItem::set_m_headid(::google::protobuf::int32 value) {
  set_has_m_headid();
  m_headid_ = value;
}

// -------------------------------------------------------------------

// t_AnnouncementItem

// required int32 m_id = 1;
inline bool t_AnnouncementItem::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_AnnouncementItem::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_AnnouncementItem::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_AnnouncementItem::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 t_AnnouncementItem::m_id() const {
  return m_id_;
}
inline void t_AnnouncementItem::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// required string m_title = 2;
inline bool t_AnnouncementItem::has_m_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_AnnouncementItem::set_has_m_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_AnnouncementItem::clear_has_m_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_AnnouncementItem::clear_m_title() {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    m_title_->clear();
  }
  clear_has_m_title();
}
inline const ::std::string& t_AnnouncementItem::m_title() const {
  return *m_title_;
}
inline void t_AnnouncementItem::set_m_title(const ::std::string& value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void t_AnnouncementItem::set_m_title(const char* value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void t_AnnouncementItem::set_m_title(const char* value, size_t size) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_AnnouncementItem::mutable_m_title() {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  return m_title_;
}
inline ::std::string* t_AnnouncementItem::release_m_title() {
  clear_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_title_;
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_AnnouncementItem::set_allocated_m_title(::std::string* m_title) {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (m_title) {
    set_has_m_title();
    m_title_ = m_title;
  } else {
    clear_has_m_title();
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_content = 3;
inline bool t_AnnouncementItem::has_m_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_AnnouncementItem::set_has_m_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_AnnouncementItem::clear_has_m_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_AnnouncementItem::clear_m_content() {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    m_content_->clear();
  }
  clear_has_m_content();
}
inline const ::std::string& t_AnnouncementItem::m_content() const {
  return *m_content_;
}
inline void t_AnnouncementItem::set_m_content(const ::std::string& value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void t_AnnouncementItem::set_m_content(const char* value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void t_AnnouncementItem::set_m_content(const char* value, size_t size) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_AnnouncementItem::mutable_m_content() {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  return m_content_;
}
inline ::std::string* t_AnnouncementItem::release_m_content() {
  clear_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_content_;
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_AnnouncementItem::set_allocated_m_content(::std::string* m_content) {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    delete m_content_;
  }
  if (m_content) {
    set_has_m_content();
    m_content_ = m_content;
  } else {
    clear_has_m_content();
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// t_MailItem

// required int32 m_id = 1;
inline bool t_MailItem::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_MailItem::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_MailItem::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_MailItem::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 t_MailItem::m_id() const {
  return m_id_;
}
inline void t_MailItem::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// required string m_title = 2;
inline bool t_MailItem::has_m_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_MailItem::set_has_m_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_MailItem::clear_has_m_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_MailItem::clear_m_title() {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    m_title_->clear();
  }
  clear_has_m_title();
}
inline const ::std::string& t_MailItem::m_title() const {
  return *m_title_;
}
inline void t_MailItem::set_m_title(const ::std::string& value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void t_MailItem::set_m_title(const char* value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void t_MailItem::set_m_title(const char* value, size_t size) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_MailItem::mutable_m_title() {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  return m_title_;
}
inline ::std::string* t_MailItem::release_m_title() {
  clear_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_title_;
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_MailItem::set_allocated_m_title(::std::string* m_title) {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (m_title) {
    set_has_m_title();
    m_title_ = m_title;
  } else {
    clear_has_m_title();
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 m_time = 3;
inline bool t_MailItem::has_m_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_MailItem::set_has_m_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_MailItem::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_MailItem::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 t_MailItem::m_time() const {
  return m_time_;
}
inline void t_MailItem::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// required string m_content = 4;
inline bool t_MailItem::has_m_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t_MailItem::set_has_m_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t_MailItem::clear_has_m_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t_MailItem::clear_m_content() {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    m_content_->clear();
  }
  clear_has_m_content();
}
inline const ::std::string& t_MailItem::m_content() const {
  return *m_content_;
}
inline void t_MailItem::set_m_content(const ::std::string& value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void t_MailItem::set_m_content(const char* value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void t_MailItem::set_m_content(const char* value, size_t size) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_MailItem::mutable_m_content() {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  return m_content_;
}
inline ::std::string* t_MailItem::release_m_content() {
  clear_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_content_;
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_MailItem::set_allocated_m_content(::std::string* m_content) {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    delete m_content_;
  }
  if (m_content) {
    set_has_m_content();
    m_content_ = m_content;
  } else {
    clear_has_m_content();
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SC_PlayerInfo

// required int32 m_playerid = 1;
inline bool SC_PlayerInfo::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_PlayerInfo::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_PlayerInfo::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_PlayerInfo::clear_m_playerid() {
  m_playerid_ = 0;
  clear_has_m_playerid();
}
inline ::google::protobuf::int32 SC_PlayerInfo::m_playerid() const {
  return m_playerid_;
}
inline void SC_PlayerInfo::set_m_playerid(::google::protobuf::int32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// required string m_nickname = 2;
inline bool SC_PlayerInfo::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_PlayerInfo::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_PlayerInfo::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_PlayerInfo::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& SC_PlayerInfo::m_nickname() const {
  return *m_nickname_;
}
inline void SC_PlayerInfo::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void SC_PlayerInfo::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void SC_PlayerInfo::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SC_PlayerInfo::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* SC_PlayerInfo::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SC_PlayerInfo::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 m_sex = 3;
inline bool SC_PlayerInfo::has_m_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_PlayerInfo::set_has_m_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_PlayerInfo::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_PlayerInfo::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 SC_PlayerInfo::m_sex() const {
  return m_sex_;
}
inline void SC_PlayerInfo::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// required int32 m_headid = 4;
inline bool SC_PlayerInfo::has_m_headid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_PlayerInfo::set_has_m_headid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_PlayerInfo::clear_has_m_headid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_PlayerInfo::clear_m_headid() {
  m_headid_ = 0;
  clear_has_m_headid();
}
inline ::google::protobuf::int32 SC_PlayerInfo::m_headid() const {
  return m_headid_;
}
inline void SC_PlayerInfo::set_m_headid(::google::protobuf::int32 value) {
  set_has_m_headid();
  m_headid_ = value;
}

// required int64 m_money = 5;
inline bool SC_PlayerInfo::has_m_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_PlayerInfo::set_has_m_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_PlayerInfo::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_PlayerInfo::clear_m_money() {
  m_money_ = GOOGLE_LONGLONG(0);
  clear_has_m_money();
}
inline ::google::protobuf::int64 SC_PlayerInfo::m_money() const {
  return m_money_;
}
inline void SC_PlayerInfo::set_m_money(::google::protobuf::int64 value) {
  set_has_m_money();
  m_money_ = value;
}

// -------------------------------------------------------------------

// CS_EnterGame

// required int32 m_gameid = 1;
inline bool CS_EnterGame::has_m_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_EnterGame::set_has_m_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_EnterGame::clear_has_m_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_EnterGame::clear_m_gameid() {
  m_gameid_ = 0;
  clear_has_m_gameid();
}
inline ::google::protobuf::int32 CS_EnterGame::m_gameid() const {
  return m_gameid_;
}
inline void CS_EnterGame::set_m_gameid(::google::protobuf::int32 value) {
  set_has_m_gameid();
  m_gameid_ = value;
}

// -------------------------------------------------------------------

// SC_EnterGameRst

// required int32 m_rst = 1;
inline bool SC_EnterGameRst::has_m_rst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_EnterGameRst::set_has_m_rst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_EnterGameRst::clear_has_m_rst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_EnterGameRst::clear_m_rst() {
  m_rst_ = 0;
  clear_has_m_rst();
}
inline ::google::protobuf::int32 SC_EnterGameRst::m_rst() const {
  return m_rst_;
}
inline void SC_EnterGameRst::set_m_rst(::google::protobuf::int32 value) {
  set_has_m_rst();
  m_rst_ = value;
}

// required int32 m_gameid = 2;
inline bool SC_EnterGameRst::has_m_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_EnterGameRst::set_has_m_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_EnterGameRst::clear_has_m_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_EnterGameRst::clear_m_gameid() {
  m_gameid_ = 0;
  clear_has_m_gameid();
}
inline ::google::protobuf::int32 SC_EnterGameRst::m_gameid() const {
  return m_gameid_;
}
inline void SC_EnterGameRst::set_m_gameid(::google::protobuf::int32 value) {
  set_has_m_gameid();
  m_gameid_ = value;
}

// -------------------------------------------------------------------

// CS_Rank

// required int32 m_page = 1;
inline bool CS_Rank::has_m_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_Rank::set_has_m_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_Rank::clear_has_m_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_Rank::clear_m_page() {
  m_page_ = 0;
  clear_has_m_page();
}
inline ::google::protobuf::int32 CS_Rank::m_page() const {
  return m_page_;
}
inline void CS_Rank::set_m_page(::google::protobuf::int32 value) {
  set_has_m_page();
  m_page_ = value;
}

// required int32 m_perPageNum = 2;
inline bool CS_Rank::has_m_perpagenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_Rank::set_has_m_perpagenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_Rank::clear_has_m_perpagenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_Rank::clear_m_perpagenum() {
  m_perpagenum_ = 0;
  clear_has_m_perpagenum();
}
inline ::google::protobuf::int32 CS_Rank::m_perpagenum() const {
  return m_perpagenum_;
}
inline void CS_Rank::set_m_perpagenum(::google::protobuf::int32 value) {
  set_has_m_perpagenum();
  m_perpagenum_ = value;
}

// -------------------------------------------------------------------

// SC_RankData

// repeated .rpc.t_RankItem m_data = 1;
inline int SC_RankData::m_data_size() const {
  return m_data_.size();
}
inline void SC_RankData::clear_m_data() {
  m_data_.Clear();
}
inline const ::rpc::t_RankItem& SC_RankData::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::rpc::t_RankItem* SC_RankData::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::rpc::t_RankItem* SC_RankData::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_RankItem >&
SC_RankData::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::t_RankItem >*
SC_RankData::mutable_m_data() {
  return &m_data_;
}

// -------------------------------------------------------------------

// SC_Announcement

// repeated .rpc.t_AnnouncementItem m_data = 1;
inline int SC_Announcement::m_data_size() const {
  return m_data_.size();
}
inline void SC_Announcement::clear_m_data() {
  m_data_.Clear();
}
inline const ::rpc::t_AnnouncementItem& SC_Announcement::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::rpc::t_AnnouncementItem* SC_Announcement::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::rpc::t_AnnouncementItem* SC_Announcement::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_AnnouncementItem >&
SC_Announcement::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::t_AnnouncementItem >*
SC_Announcement::mutable_m_data() {
  return &m_data_;
}

// -------------------------------------------------------------------

// SC_MailList

// repeated .rpc.t_MailItem m_data = 1;
inline int SC_MailList::m_data_size() const {
  return m_data_.size();
}
inline void SC_MailList::clear_m_data() {
  m_data_.Clear();
}
inline const ::rpc::t_MailItem& SC_MailList::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::rpc::t_MailItem* SC_MailList::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::rpc::t_MailItem* SC_MailList::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::t_MailItem >&
SC_MailList::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::t_MailItem >*
SC_MailList::mutable_m_data() {
  return &m_data_;
}

// -------------------------------------------------------------------

// CS_MailDelItem

// required int32 m_id = 1;
inline bool CS_MailDelItem::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_MailDelItem::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_MailDelItem::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_MailDelItem::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 CS_MailDelItem::m_id() const {
  return m_id_;
}
inline void CS_MailDelItem::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::emPacket_Lobby>() {
  return ::rpc::emPacket_Lobby_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Packet_5fLobby_2eproto__INCLUDED
