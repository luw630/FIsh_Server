// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_Base.proto

#ifndef PROTOBUF_Packet_5fBase_2eproto__INCLUDED
#define PROTOBUF_Packet_5fBase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Packet_5fBase_2eproto();
void protobuf_AssignDesc_Packet_5fBase_2eproto();
void protobuf_ShutdownFile_Packet_5fBase_2eproto();

class t_EnterGamePlayerData;

enum emPacket {
  emPacket_Login_Begin = 256,
  emPacket_Login_End = 511,
  emPacket_Lobby_Begin = 512,
  emPacket_Lobby_End = 767,
  emPacket_Fish_Begin = 768,
  emPacket_Fish_End = 1023
};
bool emPacket_IsValid(int value);
const emPacket emPacket_MIN = emPacket_Login_Begin;
const emPacket emPacket_MAX = emPacket_Fish_End;
const int emPacket_ARRAYSIZE = emPacket_MAX + 1;

const ::google::protobuf::EnumDescriptor* emPacket_descriptor();
inline const ::std::string& emPacket_Name(emPacket value) {
  return ::google::protobuf::internal::NameOfEnum(
    emPacket_descriptor(), value);
}
inline bool emPacket_Parse(
    const ::std::string& name, emPacket* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emPacket>(
    emPacket_descriptor(), name, value);
}
// ===================================================================

class t_EnterGamePlayerData : public ::google::protobuf::Message {
 public:
  t_EnterGamePlayerData();
  virtual ~t_EnterGamePlayerData();

  t_EnterGamePlayerData(const t_EnterGamePlayerData& from);

  inline t_EnterGamePlayerData& operator=(const t_EnterGamePlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_EnterGamePlayerData& default_instance();

  void Swap(t_EnterGamePlayerData* other);

  // implements Message ----------------------------------------------

  t_EnterGamePlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_EnterGamePlayerData& from);
  void MergeFrom(const t_EnterGamePlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_playerid = 1;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::uint32 value);

  // required uint32 m_headid = 2;
  inline bool has_m_headid() const;
  inline void clear_m_headid();
  static const int kMHeadidFieldNumber = 2;
  inline ::google::protobuf::uint32 m_headid() const;
  inline void set_m_headid(::google::protobuf::uint32 value);

  // required string m_nickname = 3;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNicknameFieldNumber = 3;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // required int64 m_money = 4;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 4;
  inline ::google::protobuf::int64 m_money() const;
  inline void set_m_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:rpc.t_EnterGamePlayerData)
 private:
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_headid();
  inline void clear_has_m_headid();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_money();
  inline void clear_has_m_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 m_playerid_;
  ::google::protobuf::uint32 m_headid_;
  ::std::string* m_nickname_;
  ::google::protobuf::int64 m_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Packet_5fBase_2eproto();
  friend void protobuf_AssignDesc_Packet_5fBase_2eproto();
  friend void protobuf_ShutdownFile_Packet_5fBase_2eproto();

  void InitAsDefaultInstance();
  static t_EnterGamePlayerData* default_instance_;
};
// ===================================================================


// ===================================================================

// t_EnterGamePlayerData

// required uint32 m_playerid = 1;
inline bool t_EnterGamePlayerData::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_EnterGamePlayerData::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_EnterGamePlayerData::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_EnterGamePlayerData::clear_m_playerid() {
  m_playerid_ = 0u;
  clear_has_m_playerid();
}
inline ::google::protobuf::uint32 t_EnterGamePlayerData::m_playerid() const {
  return m_playerid_;
}
inline void t_EnterGamePlayerData::set_m_playerid(::google::protobuf::uint32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// required uint32 m_headid = 2;
inline bool t_EnterGamePlayerData::has_m_headid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_EnterGamePlayerData::set_has_m_headid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_EnterGamePlayerData::clear_has_m_headid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_EnterGamePlayerData::clear_m_headid() {
  m_headid_ = 0u;
  clear_has_m_headid();
}
inline ::google::protobuf::uint32 t_EnterGamePlayerData::m_headid() const {
  return m_headid_;
}
inline void t_EnterGamePlayerData::set_m_headid(::google::protobuf::uint32 value) {
  set_has_m_headid();
  m_headid_ = value;
}

// required string m_nickname = 3;
inline bool t_EnterGamePlayerData::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_EnterGamePlayerData::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_EnterGamePlayerData::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_EnterGamePlayerData::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& t_EnterGamePlayerData::m_nickname() const {
  return *m_nickname_;
}
inline void t_EnterGamePlayerData::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void t_EnterGamePlayerData::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void t_EnterGamePlayerData::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* t_EnterGamePlayerData::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* t_EnterGamePlayerData::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void t_EnterGamePlayerData::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 m_money = 4;
inline bool t_EnterGamePlayerData::has_m_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t_EnterGamePlayerData::set_has_m_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t_EnterGamePlayerData::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t_EnterGamePlayerData::clear_m_money() {
  m_money_ = GOOGLE_LONGLONG(0);
  clear_has_m_money();
}
inline ::google::protobuf::int64 t_EnterGamePlayerData::m_money() const {
  return m_money_;
}
inline void t_EnterGamePlayerData::set_m_money(::google::protobuf::int64 value) {
  set_has_m_money();
  m_money_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::emPacket>() {
  return ::rpc::emPacket_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Packet_5fBase_2eproto__INCLUDED
